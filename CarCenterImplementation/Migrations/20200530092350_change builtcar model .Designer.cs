// <auto-generated />
using System;
using CarCenterImplementation;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarCenterImplementation.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200530092350_change builtcar model ")]
    partial class changebuiltcarmodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarCenterImplementation.Models.BuiltCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("FinalCost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SoldDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("BuiltCars");
                });

            modelBuilder.Entity("CarCenterImplementation.Models.BuiltCarKit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuiltCarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KitCount")
                        .HasColumnType("int");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<bool>("RemovedFromStorages")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuiltCarId");

                    b.HasIndex("KitId");

                    b.ToTable("BuiltCarKits");
                });

            modelBuilder.Entity("CarCenterImplementation.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarCenterImplementation.Models.DepositKitDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KitCount")
                        .HasColumnType("int");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KitId");

                    b.HasIndex("StorageId");

                    b.ToTable("DepositKitDates");
                });

            modelBuilder.Entity("CarCenterImplementation.Models.Kit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("KitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kits");
                });

            modelBuilder.Entity("CarCenterImplementation.Models.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StorageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StorageName = "Хранилище 1"
                        },
                        new
                        {
                            Id = 2,
                            StorageName = "Хранилище 2"
                        },
                        new
                        {
                            Id = 3,
                            StorageName = "Хранилище 3"
                        },
                        new
                        {
                            Id = 4,
                            StorageName = "Хранилище 4"
                        });
                });

            modelBuilder.Entity("CarCenterImplementation.Models.StorageKit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KitCount")
                        .HasColumnType("int");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KitId");

                    b.HasIndex("StorageId");

                    b.ToTable("StorageKits");
                });

            modelBuilder.Entity("CarCenterImplementation.Models.BuiltCar", b =>
                {
                    b.HasOne("CarCenterImplementation.Models.Car", "Car")
                        .WithMany("BuiltCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarCenterImplementation.Models.BuiltCarKit", b =>
                {
                    b.HasOne("CarCenterImplementation.Models.BuiltCar", "Car")
                        .WithMany("CarKits")
                        .HasForeignKey("BuiltCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCenterImplementation.Models.Kit", "Kit")
                        .WithMany("CarKits")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarCenterImplementation.Models.DepositKitDate", b =>
                {
                    b.HasOne("CarCenterImplementation.Models.Kit", "Kit")
                        .WithMany("DepositKitDates")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCenterImplementation.Models.Storage", "Storage")
                        .WithMany("DepositKitDates")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarCenterImplementation.Models.StorageKit", b =>
                {
                    b.HasOne("CarCenterImplementation.Models.Kit", "Kit")
                        .WithMany("StorageKits")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarCenterImplementation.Models.Storage", "Storage")
                        .WithMany("StorageKits")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
